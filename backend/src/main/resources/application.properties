# active profiles config
#
# application use two active profiles
#
# one for select database
# ------------------------------------------------
# When using HSQL, use: hsqldb
#   other database: to be done. PR welcome :-)
# ------------------------------------------------
#
# one - for select repository abstraction
# ------------------------------------------------
# When using Spring Data JPA, use: spring-data-jpa
# When using Spring jpa, use: jpa    NOT FULLY IMPLEMENTED YET
# When using Spring JDBC, use: jdbc  NOT FULLY IMPLEMENTED YET
# ------------------------------------------------
spring.profiles.active=hsqldb,spring-data-jpa


logging.level.org.springframework.graphql=DEBUG
logging.level.graphql=INFO

# Workaround to find *.graphl files also in
# src/TEST/resources/graphql/**
#
# see: https://github.com/spring-projects/spring-graphql/issues/308
spring.graphql.schema.locations=classpath*:graphql/**/

#----------------------------------------------------------------
# Server Configuration
#----------------------------------------------------------------
server.port=9977

#----------------------------------------------------------------
# Logging
#----------------------------------------------------------------
logging.level.org.springframework=INFO

#----------------------------------------------------------------
# spring-graphql config
#----------------------------------------------------------------
# Note that we DO NOT use the embedded GraphiQL UI from
# spring-graphql yet, because we use our own version
# that contains a login form
# Maybe we can switch to cookie-based authentication
# later
spring.graphql.graphiql.enabled=false

# GraphQL endpoints for Web and WebSocket requests
# Note that this endpoints are accessible only with a
# valid JWT token.
# You can find a valid token after login with GraphiQL
# or in the server log file after starting the server
# (search for "Never Expiring JWT Token")
spring.graphql.path=/graphql
spring.graphql.websocket.path=/graphql

